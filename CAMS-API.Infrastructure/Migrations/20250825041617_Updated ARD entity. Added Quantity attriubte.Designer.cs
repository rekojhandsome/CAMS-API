// <auto-generated />
using System;
using CAMS_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAMS_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250825041617_Updated ARD entity. Added Quantity attriubte")]
    partial class UpdatedARDentityAddedQuantityattriubte
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CAMS_API.CAMS_API.Core.Entities.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryID"));

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryID");

                    b.HasIndex("AssetID")
                        .IsUnique();

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountID");

                    b.HasIndex("EmployeeID")
                        .IsUnique();

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Asset", b =>
                {
                    b.Property<int>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetID"));

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAcquired")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviceID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssetID");

                    b.HasIndex("DeviceID");

                    b.ToTable("Assets", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestDetail", b =>
                {
                    b.Property<int>("AssetRequestID")
                        .HasColumnType("int");

                    b.Property<int>("SequenceID")
                        .HasColumnType("int");

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("AssetRequestID", "SequenceID");

                    b.HasIndex("AssetID");

                    b.ToTable("AssetRequestDetails", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestHeader", b =>
                {
                    b.Property<int>("AssetRequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetRequestID"));

                    b.Property<DateTime>("AssetRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("RequiresApproval")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAssetValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AssetRequestID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("AssetRequestHeaders", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestSignatory", b =>
                {
                    b.Property<int>("AssetRequestID")
                        .HasColumnType("int");

                    b.Property<int>("SequenceID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateSigned")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SignatoryID")
                        .HasColumnType("int");

                    b.Property<string>("SignatoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssetRequestID", "SequenceID", "DepartmentID", "PositionID");

                    b.ToTable("AssetRequestSignatories", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            DepartmentCode = "IT",
                            DepartmentName = "IT Department"
                        },
                        new
                        {
                            DepartmentID = 2,
                            DepartmentCode = "HR",
                            DepartmentName = "HR Department"
                        });
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Device", b =>
                {
                    b.Property<int>("DeviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceID"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeviceID");

                    b.ToTable("Devices", (string)null);

                    b.HasData(
                        new
                        {
                            DeviceID = 1,
                            Brand = "Sample Brand",
                            DeviceName = "Sample Laptop",
                            DeviceType = "Computer",
                            Model = "Sample Model"
                        },
                        new
                        {
                            DeviceID = 2,
                            Brand = "Sample Mobile Brand",
                            DeviceName = "Mobile Phone",
                            DeviceType = "Smartphone",
                            Model = "Sample Mobile Model"
                        });
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.DocumentSignatory", b =>
                {
                    b.Property<int>("DocumentID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("SignatoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentID", "DepartmentID", "SignatoryID");

                    b.ToTable("DocumentSignatories", (string)null);

                    b.HasData(
                        new
                        {
                            DocumentID = 1,
                            DepartmentID = 1,
                            SignatoryID = 2,
                            DateCreated = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentName = "Asset Request",
                            IsActive = true,
                            Level = 1,
                            PositionID = 2,
                            PositionName = "Manager",
                            SignatoryName = "Sample Manager"
                        },
                        new
                        {
                            DocumentID = 1,
                            DepartmentID = 1,
                            SignatoryID = 3,
                            DateCreated = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DocumentName = "Asset Request",
                            IsActive = true,
                            Level = 2,
                            PositionID = 3,
                            PositionName = "CEO",
                            SignatoryName = "CEO ceo"
                        });
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContactNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("PositionID");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNo = 1234567890,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentID = 1,
                            Email = "sample@gmail.com",
                            FirstName = "John",
                            Gender = "Male",
                            LastName = "Doe",
                            MiddleName = "A",
                            PositionID = 1
                        },
                        new
                        {
                            EmployeeID = 2,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNo = 1234567890,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentID = 1,
                            Email = "sample@gmail.com",
                            FirstName = "Sample",
                            Gender = "Male",
                            LastName = "Manager",
                            MiddleName = "A",
                            PositionID = 2
                        },
                        new
                        {
                            EmployeeID = 3,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ContactNo = 1234567890,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateHired = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentID = 1,
                            Email = "sample@gmail.com",
                            FirstName = "CEO",
                            Gender = "Male",
                            LastName = "ceo",
                            MiddleName = "A",
                            PositionID = 3
                        });
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Position", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionID"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionID");

                    b.ToTable("Positions", (string)null);

                    b.HasData(
                        new
                        {
                            PositionID = 1,
                            PositionName = "Programmer"
                        },
                        new
                        {
                            PositionID = 2,
                            PositionName = "Manager"
                        },
                        new
                        {
                            PositionID = 3,
                            PositionName = "CEO"
                        });
                });

            modelBuilder.Entity("CAMS_API.CAMS_API.Core.Entities.Inventory", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Asset", "Asset")
                        .WithOne("Inventory")
                        .HasForeignKey("CAMS_API.CAMS_API.Core.Entities.Inventory", "AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Account", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Employee", "Employee")
                        .WithOne("Account")
                        .HasForeignKey("CAMS_API.Models.Entities.Account", "EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Asset", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Device", "Device")
                        .WithMany("Assets")
                        .HasForeignKey("DeviceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestDetail", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Asset", "Asset")
                        .WithMany("AssetRequestDetails")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CAMS_API.Models.Entities.AssetRequestHeader", "AssetRequestHeader")
                        .WithMany("AssetRequestDetails")
                        .HasForeignKey("AssetRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("AssetRequestHeader");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestHeader", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Employee", "Employee")
                        .WithMany("AssetRequestHeaders")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestSignatory", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.AssetRequestHeader", "AssetRequestHeader")
                        .WithMany("AssetRequestSignatories")
                        .HasForeignKey("AssetRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetRequestHeader");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Employee", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CAMS_API.Models.Entities.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Asset", b =>
                {
                    b.Navigation("AssetRequestDetails");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestHeader", b =>
                {
                    b.Navigation("AssetRequestDetails");

                    b.Navigation("AssetRequestSignatories");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Device", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Employee", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("AssetRequestHeaders");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
