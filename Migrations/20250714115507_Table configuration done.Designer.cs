// <auto-generated />
using System;
using CAMS_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAMS_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250714115507_Table configuration done")]
    partial class Tableconfigurationdone
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CAMS_API.Models.Entities.Asset", b =>
                {
                    b.Property<int>("assetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("assetID"));

                    b.Property<string>("assetTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AssetTag");

                    b.Property<DateTime>("dateAcquired")
                        .HasColumnType("datetime")
                        .HasColumnName("DateAcquired");

                    b.Property<int>("deviceID")
                        .HasColumnType("int")
                        .HasColumnName("DeviceID");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<string>("serialNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SerialNumber");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("assetID");

                    b.HasIndex("deviceID");

                    b.ToTable("Asset", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestDetail", b =>
                {
                    b.Property<int>("assetRequestID")
                        .HasColumnType("int");

                    b.Property<int>("sequenceID")
                        .HasColumnType("int");

                    b.Property<int>("assetID")
                        .HasColumnType("int");

                    b.Property<decimal>("assetValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("assetRequestID", "sequenceID");

                    b.HasIndex("assetID");

                    b.ToTable("AssetRequestDetail", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestHeader", b =>
                {
                    b.Property<int>("assetRequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("assetRequestID"));

                    b.Property<DateTime>("assetRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("employeeID")
                        .HasColumnType("int");

                    b.Property<bool>("requiresApproval")
                        .HasColumnType("bit");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("totalAssetValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("assetRequestID");

                    b.HasIndex("employeeID");

                    b.ToTable("AssetRequestHeaders", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Department", b =>
                {
                    b.Property<int>("departmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("departmentID"));

                    b.Property<string>("departmentCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DepartmentCode");

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DepartmentName");

                    b.HasKey("departmentID");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Device", b =>
                {
                    b.Property<int>("deviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeviceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("deviceID"));

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Brand");

                    b.Property<string>("deviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DeviceName");

                    b.Property<string>("deviceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DeviceType");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Model");

                    b.HasKey("deviceID");

                    b.ToTable("Device", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Employee", b =>
                {
                    b.Property<int>("employeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("employeeID"));

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("contactNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateHired")
                        .HasColumnType("datetime2");

                    b.Property<int>("departmentID")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("middleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("positionID")
                        .HasColumnType("int");

                    b.Property<string>("suffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("employeeID");

                    b.HasIndex("departmentID");

                    b.HasIndex("positionID");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Position", b =>
                {
                    b.Property<int>("positionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PositionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("positionID"));

                    b.Property<string>("positionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PositionName");

                    b.HasKey("positionID");

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Asset", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Device", "Device")
                        .WithMany("Assets")
                        .HasForeignKey("deviceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestDetail", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Asset", null)
                        .WithMany("AssetRequestDetails")
                        .HasForeignKey("assetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CAMS_API.Models.Entities.AssetRequestHeader", "AssetRequestHeader")
                        .WithMany("AssetRequestDetails")
                        .HasForeignKey("assetRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetRequestHeader");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestHeader", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("employeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Employee", b =>
                {
                    b.HasOne("CAMS_API.Models.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("departmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CAMS_API.Models.Entities.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("positionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Asset", b =>
                {
                    b.Navigation("AssetRequestDetails");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.AssetRequestHeader", b =>
                {
                    b.Navigation("AssetRequestDetails");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Device", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("CAMS_API.Models.Entities.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
